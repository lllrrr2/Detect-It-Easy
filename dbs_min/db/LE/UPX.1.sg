init("packer","UPX")
function getUPXOptions(e){var t=LE.readByte(e+2)
var s=LE.readByte(e+3)
var r=""
switch(t){case 2:r="NRV2B_LE32"
break
case 3:r="NRV2B_8"
break
case 4:r="NRV2B_LE16"
break
case 5:r="NRV2D_LE32"
break
case 6:r="NRV2D_8"
break
case 7:r="NRV2D_LE16"
break
case 8:r="NRV2E_LE32"
break
case 9:r="NRV2E_8"
break
case 10:r="NRV"
break
case 14:r="LZMA"
break
case 15:r="zlib"
break}if(r!=""){sOptions=sOptions.append(r)
if(s==8){sOptions=sOptions.append("best")}else{sOptions=sOptions.append("brute")}}}function getUPXVersion(){var e=LE.getEntryPointOffset()
var t=LE.findString(e-1024,1024,"$Id: UPX ")
var s=LE.findString(e,1024,"UPX!")
if(s!=-1){getUPXOptions(s+4)}if(t!=-1){sVersion=LE.getString(t+9,4)}if(sVersion==""&&s!=-1){sVersion=LE.getString(s-5,4)}}function detect(){if(LE.compareEP("bf........6957..........061e07578db7........8dbf........b9........fdf3a5fc8d77..5f83cd..57e9")){sOptions="for Watcom C"
bDetected=true}else if(LE.compareEP("bf........be........6957..........57fc31db83cd..909001db75")){sOptions="for Watcom C"
bDetected=true}getUPXVersion()
return result()}