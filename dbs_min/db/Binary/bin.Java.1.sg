init("format","Java Class File (.CLASS)")
function detect(){if(Binary.getSize()>=8){if(Binary.compare("CAFEBABE")){var a=Binary.read_uint16(4,_BE)
var e=Binary.read_uint16(6,_BE)
bDetected=true
switch(e){case 45:sVersion="JDK 1.1"
break
case 46:sVersion="JDK 1.2"
break
case 47:sVersion="JDK 1.3"
break
case 48:sVersion="JDK 1.4"
break
case 49:sVersion="Java SE 5.0"
break
case 50:sVersion="Java SE 6"
break
case 51:sVersion="Java SE 7"
break
case 52:sVersion="Java SE 8"
break
case 53:sVersion="Java SE 9"
break
case 54:sVersion="Java SE 10"
break
case 55:sVersion="Java SE 11"
break
case 56:sVersion="Java SE 12"
break
case 57:sVersion="Java SE 13"
break
case 58:sVersion="Java SE 14"
break
case 59:sVersion="Java SE 15"
break
case 60:sVersion="Java SE 16"
break
case 61:sVersion="Java SE 17"
break
case 62:sVersion="Java SE 18"
break
case 63:sVersion="Java SE 19"
break
case 64:sVersion="Java SE 20"
break
case 65:sVersion="Java SE 21"
break
case 66:sVersion="Java SE 22"
break
case 67:sVersion="Java SE 23"
break
case 68:sVersion="Java SE 24"
break
default:bDetected=false}if(sVersion!=""&&a){sVersion+="."+a}if(bDetected&&Binary.isVerbose()){var s=8
var r=Binary.read_uint16(s,_BE)
s+=2
for(pool=1;pool<r;pool++){switch(Binary.read_uint8(s)){case 1:s+=1+2+Binary.read_uint16(s+1,_BE)
break
case 3:case 4:s+=1+4
break
case 5:case 6:s+=1+4+4
break
case 7:case 8:case 16:s+=1+2
break
case 9:case 10:case 11:case 12:case 18:s+=1+2+2
break
case 15:s+=1+1+2
break
default:sOption("err unk tag:"+s)}}var i=Binary.read_uint16(s,_BE)
if(i&1){sOption("ACC_PUBLIC")}if(i&2){sOption("ACC_PRIVATE")}if(i&4){sOption("ACC_PROTECTED")}if(i&8){sOption("ACC_STATIC")}if(i&16){sOption("ACC_FINAL")}if(i&32){sOption("ACC_SUPER")}if(i&64){sOption("ACC_VOLATILE")}if(i&128){sOption("ACC_TRANSIENT")}if(i&256){sOption("ACC_NATIVE")}if(i&512){sOption("ACC_INTERFACE")}if(i&1024){sOption("ACC_ABSTRACT")}if(i&2048){sOption("ACC_STRICT")}}}}_setLang("Java",bDetected)
return result()}