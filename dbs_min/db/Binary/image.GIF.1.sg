init("image","Graphics Interchange Format file (.GIF)")
function detect(){if(!File.compare("'GIF87'")&&!File.compare("'GIF89'")||File.getSize()<11)return
sVersion=Binary.getString(4,2)
if(/\d[a-z]/.test(sVersion)<0)return
sVersion="v198"+sVersion
bDetected=true
if(!File.isDeepScan()&&!File.compare("3B",File.getSize()-1))sVersion+="/malformed"
if(!File.isVerbose())return result()
var e=File.read_uint8(10),i=File.read_uint8(12),r=""
sOption(File.read_uint16(6)+"x"+File.read_uint16(8))
var a=1<<(e&7)+1
sOption(a,"col:")
var l=File.read_uint8(11)
if(l)sOption(l,"bgc:")
if(i)sOption((i+15)/64,"a/r:")
if(File.isDeepScan()){p=13
imgs=0
cmt=""
if(e&128){p+=3*a}blocksp=p
e:for(;;){var n=File.read_uint8(p++)
if(n===59)break
else if(n===33){var s=File.read_uint8(p++)
switch(s){case 249:p+=File.read_uint8(p++)
break
case 254:s=File.read_uint8(p++)
if(s){cmt+=File.read_ansiString(p,s)
p+=s}case 255:s=File.read_uint8(p++)
if(s===11){t=File.read_ansiString(p,s)
sOption(t,"appdata:")
p+=s
s=File.read_uint8(p++)
while(s&&p<File.getSize()){p+=s
s=File.read_uint8(p++)}}else{r+="!badappext"
break e}break
default:s=File.read_uint8(p++)
while(s){p+=s
s=File.read_uint8(p++)}}}if(p>=File.getSize()){r+="!short"
break}if(n!=44)continue
imgs++
if(!File.read_uint16(p+4)||!File.read_uint16(p+6)){r+="!badimg"
break}p+=8
e=File.read_uint8(p++)
p++
if(e&128){a=1<<(e&7)+1
p+=3*a
_log("  local palettes skipped @"+Hex(p))}s=File.read_uint8(p++)
while(s&&p<File.getSize()){p+=s
s=File.read_uint8(p++)}if(p>=File.getSize()){r+="!short"
break}}if(n!=59)r+="!badEoS"
if(!imgs){bDetected=false
return}else if(imgs>1)sOption(imgs,"frames:")
if(r!="")sVersion+="/malformed"+r
else sOption(p,"sz:")}}