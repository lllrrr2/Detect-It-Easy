const logType={warning:-2,about:-1,nothing:0,any:1,net:2},heurLabel="HEUR"
var lastOffsetDetected="0x00"
function detect(){main()}function main(){if(stubForWrongEnvironment())return null
if(stubForLegacyEngines())return null
if(PE.isHeuristicScan()){if(!PE.isVerbose()){log(logType.warning,"To get the full heuristic scan result use '--verbose'")}log(logType.about,"Generic Heuristic Analysis by DosX (@DosX_dev)")
log(logType.nothing,"Scanning has begun!")
if(PE.isNET()){scanForObfuscations_NET()
scanForAntiAnalysis_NET()}else{scanForObfuscations_Native()}scanForPackersAndCryptors_NET_and_Native()
scanForLicensingSystems_NET_and_Native()
scanForBadFileFormat_NET_and_Native()
scanForDebugData_NET_and_Native()
if(PE.isVerbose()){scanForLanguages_NET_and_Native()}log(logType.nothing,"Scan completed.")}else{log(logType.warning,"Heuristic scan is disabled. Use '--heuristicscan' to enable")}}function stubForLegacyEngines(){if(typeof _error==="undefined"){stdout(">>> Update DIE Engine to 3.11 and higher for using Heuristic-analyser by DosX <<<")
return true}return false}function stubForWrongEnvironment(){if(typeof PE==="undefined"){stdout(">>> Wrong environment! 'PE' is undefined. Check DIE-engine for correct installation <<<")
return true}return false}function stdout(e){if(typeof console==="object"){console.warn(e)}else if(typeof File==="object"){_setResult("~warning",e,String(),String())}else{if(typeof _error==="function"){_error(e)}else{throw e}}}function scanForObfuscations_NET(){var e=String()
var t=Boolean()
const r=isVbNetStandartLibraryPresent()
var i=false
const I=["Main","main","MAIN","MyApplication"],L=["Main","main","main@","<Main>$","mainCRTStartup","wWinMainCRTStartup"]
if(!PE.isDll()){if(r){if(isAllNetReferencesMissing(I)){i=true}}else if(isAllNetReferencesMissing(L)){i=true}if(i){log(logType.net,'No "Main" method found')}}if(i)e="Modified EP"
var n=false
if(PE.isNetGlobalCctorPresent()&&!isClrNET()){log(logType.net,"Global constructor detected!")
n=true}if(n)e+=(e.length!=0?" + ":String())+"CLR constructor"
var x=false
const U=["~","Strings","US","GUID","Blob"]
const w=0
if(!PE.isDll()&&PE.getNumberOfSections()>1&&!isClrNET()){for(var s=0;s<U.length;s++){const Pe=U[s]
if(!PE.isSignatureInSectionPresent(w,"00'#"+Pe+"'00")){x=true
break}}}if(x)e+=(e.length!=0?" + ":String())+"Strange EP position"
var a=false
if(!PE.isDll()&&!isClrNET()){if(!PE.is64()){const Ee=getFirstEpAsmOpCode()
if(Ee!=="JMP"){if(PE.VAToOffset(PE.getAddressOfEntryPoint())!==-1){log(logType.net,"Very strange EP pattern: "+getEpAsmPattern(onlyOpCodes=true,numberOf=4).split("|").join(" .. "))}else{log(logType.net,"No native entry point")}a=true}}else{if(PE.VAToOffset(PE.getAddressOfEntryPoint())!==0){a=true}}}if(a)e+=(e.length!=0?" + ":String())+"Modified native EP"
var z=false
if(PE.findSignature(PE.getDosStubOffset(),PE.getDosStubSize(),"'This program cannot be run in DOS mode.'")===-1){log(logType.net,"DOS-stub modified!")
z=true}if(z)e+=(e.length!=0?" + ":String())+"Modified DOS"
var l=false
const V="_-=+~!@#$%^&*()\"â„–;%:?*():;,/\\|'`<>.0123456789"
if(PE.getNumberOfSections()>(!isClrNET()?6:10)||!PE.section[".text"]){l=true}else{for(var o=0;o<PE.getNumberOfSections()&&!l;o++){const B=PE.getSectionName(o)
if(B[0]!=="."&&B.length<3){l=true
break}for(var c=0;c<V.length&&!l;c++){if(B.substr(1,B.length).indexOf(V[c])!==-1){l=true}}}}if(l)e+=(e.length!=0?" + ":String())+"Strange sections"
const f=new NetOpCodes
var $=false
const g=f.ldc_i4+f.ldc_i4+f.xor+f.ldc_i4
if(validateNetByteCode(g)){if(validateNetByteCode(g+(f.bne_un_s+f.ldc_i4_2+f.stloc_0+f.sizeof+f.add))||validateNetByteCode(g+(f.bne_un+f.ldc_i4+f.stloc+f.sizeof+f.add))||validateNetByteCode(g+(f.bne_un+f.ldc_i4_2+f.stloc_s+f.sizeof+f.add))){log(logType.net,"Int confusion detected! Offset: "+lastOffsetDetected)
$=true}}if($)e+=(e.length!=0?" + ":String())+"Int confusion"
var H=false
if(isAllNetReferencesPresent(references=["System.Reflection","GetILGenerator","BeginInvoke","EndInvoke","OpCode"])&&(PE.isNetObjectPresent("Ldarg_0")||PE.isNetObjectPresent("CreateDelegate"))&&!isFrameworkComponent()){H=true}if(H)e+=(e.length!=0?" + ":String())+"Virtualization"
var j=false
if(isAllNetReferencesPresent(references=["GetTypeFromHandle","BinaryReader","CreateDelegate","MakeByRefType","DynamicMethod"])&&!isFrameworkComponent()){j=true}if(j)e+=(e.length!=0?" + ":String())+"Calls encrypt"
var G=false
if(validateNetObject("SuppressIldasmAttribute")){G=true}if(G)e+=(e.length!=0?" + ":String())+"Anti-ILDASM"
var K=false
if(validateSignature("'Form'******00'Form'******00'Form'******00")||validateNetObject("Form0")){log(logType.net,"File may be protected by de4dot!")
K=true}if(K)e+=(e.length!=0?" + ":String())+"Anti-de4dot"
var W=false
if(validateNetByteCode(f.setStrict(f.ldftn,"** ?? 00 0A")+f.setStrict(f.calli,"** 00 00 11"))||validateNetByteCode(f.idelem_i+f.setStrict(f.calli,"** 00 00 11"))){log(logType.net,"Calli invokes detected! Offset: "+lastOffsetDetected)
W=true}if(W)e+=(e.length!=0?" + ":String())+"Calli invokes"
var Y=false
if(validateNetByteCode(f.nop+f.setStrict(f.ldftn,"** 00 00 06")+f.stelem_i)||validateNetByteCode(f.nop+f.setStrict(f.ldftn,"** 00 00 0A")+f.stelem_i)||validateNetByteCode(f.setStrict(f.ldftn,"** 00 00 0A")+f.setStrict(f.calli,"** 00 00 11"))){log(logType.net,"Ldftn pointers method-obfuscation detected! Offset: "+lastOffsetDetected)
Y=true}if(Y)e+=(e.length!=0?" + ":String())+"Ldftn pointers"
var q=false
if(validateNetByteCode(f.nop+f.ldloc_0+f.ldc_i4+f.mul+f.ldc_i4+f.xor+f.br_s+f.nop+f.ldloc_0+f.ldc_i4+f.mul+f.ldc_i4+f.xor+f.br_s)||validateNetByteCode(f.ldc_i4+f.ldc_i4+f.xor+f.dup+f.stloc_0+f.ldc_i4_3+f.rem_un+f.switch__nobody)||validateNetByteCode(f.setStrict(f.ldc_i4,"00 00 00 00")+f.br+f.br+f.ldloc)||validateNetByteCode(f.ldsfld+f.brfalse+f.pop+f.setStrict(f.ldc_i4,"01 00 00 00")+f.br+f.nop)||validateNetByteCode(f.setNullValue(f.ldc_i4)+f.ldsfld+f.brtrue+f.pop+f.ldc_i4+f.br)||validateNetByteCode(f.stloc+f.ldloc+f.setStrict(f.switch__nobody,"** ** ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 00 00")+f.ldc_i4+f.br)||validateNetByteCode(f.setNullValue(f.ldc_i4)+f.stloc+f.br+f.nop+f.ldloc+f.setStrict(f.ldc_i4,"01 00 00 00")+f.ceq+f.brfalse)||validateNetByteCode(f.setNullValue(f.ldc_i4)+f.stloc+f.br+f.nop+f.ldloc+f.ldc_i4+f.ceq+f.brfalse)||validateNetByteCode(f.ldc_i4+f.br+f.ldloc_s+f.ldc_i4_s+f.ldc_i4_0+f.stelem_i1+f.ldc_i4+f.br)||validateNetByteCode(f.ldc_i4+f.ldc_i4+f._unknown+f.ldc_i4+f._unknown+f.stloc_0+f.nop+f.ldloc_0+f.ldc_i4+f.ldc_i4+f._unknown+f.ldc_i4+f._unknown+f.ceq+f.brfalse_s)||validateNetByteCode(f.setStrict(f.stloc_s,"05")+f.nop+f.ldloc_s+f._unknown+f.ceq+f.brfalse_s+f._unknown+f.setStrict(f.stloc_s,"05")+f.nop+f.ldloc_s+f._unknown+f.ceq+f.brfalse_s)||validateNetByteCode(f.ldloc_0+f.setStrict(f.ldc_i4,"?? ** ** **")+f._unknown+f.stloc_0+f.ldloc_0+f.setStrict(f.ldc_i4,"?? ** ** **")+f.xor+f.stloc_0)||validateNetByteCode(f.setStrict(f.ldc_i4,"?? ** ** **")+f._unknown+f.stloc_0+f.setStrict(f.ldftn,"** ?? ?? ??"))){log(logType.net,"Control flow obfuscation detected! Offset: "+lastOffsetDetected)
q=true}if(q)e+=(e.length!=0?" + ":String())+"Ctrl flow"
const u=PE.findSignature(PE.getDosStubOffset()+PE.getDosStubSize(),PE.getSize()-PE.getOverlaySize(),"'<Module>'00**")+8
var d=false
if(PE.compare("00**00**00",u)||PE.compare("00****00****00****00",u)||PE.compare("00******00******00******00",u)||PE.compare("00********00********00********00",u)||PE.compare("00****00****00",u)||PE.compare("00****00**00",u)||PE.compare("00**00****00",u)){log(logType.net,"Short names detected! (mask)")
d=true}if(!d&&PE.compare("00**00",u)){var S=0
const D="QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm"
for(var o=1;o<D.length&&!d;o++){if(PE.isNetObjectPresent(D[o])){S++
log(logType.net,"Short name found: '"+D[o]+"' ("+S+"/20)")}if(S===20){d=true}}}if(d)e+=(e.length!=0?" + ":String())+"Short names"
var P=false
var E=""
for(var o=0;o<300;o++){var v=PE.readByte(u+o).toString(16)
if(v==="0")v+="0"
E+=v
E+=" "}var Z=String()
const J=replaceAllInString(E,"00 ","20 20 20 ").split(" ")
for(var o=0;o<J.length;o++)Z+=String.fromCharCode(parseInt(J[o],16))
const Q=Z.split("   ")
var ee=0
for(var o=0;o<Q.length&&!P;o++){const k=Q[o]
if(k.indexOf("<")===-1&&k.match(/^(?=\d|[a-z])(?=.*[a-z]\d[a-z])(?=(?:.*\d){4,})/i))ee++
if(ee>4)P=true}if(P)e+=(e.length!=0?" + ":String())+"Bad namings"
var te=false
if(validateNetUnicodeString(" is tampered.")||validateNetUnicodeString("ping 127.0.0.1 > nul")||validateNetUnicodeString('/C ping 1.1.1.1 -n 1 -w 3000 > Nul & Del "')||validateNetUnicodeString(f.ldloc_s+f.ldc_i4_0+f.ldloc_s+f.ldc_i4_0+f.ldelem_u4+f.ldloc_s+f.ldc_i4_0+f.ldelem_u4+f._unknown+f.stelem_i4+f.ldloc_s+f.ldc_i4_1+f.ldloc_s+f.ldc_i4_1+f.ldelem_u4+f.ldloc_s+f.ldc_i4_1+f.ldelem_u4+f._unknown+f.stelem_i4+f.ldloc_s+f.ldc_i4_2+f.ldloc_s+f.ldc_i4_2+f.ldelem_u4+f.ldloc_s+f.ldc_i4_2+f.ldelem_u4+f._unknown+f.stelem_i4+f.ldloc_s+f.ldc_i4_3+f.ldloc_s+f.ldc_i4_3+f.ldelem_u4+f.ldloc_s+f.ldc_i4_3+f.ldelem_u4+f._unknown+f.stelem_i4+f.ldloc_s+f.ldc_i4_4+f.ldloc_s+f.ldc_i4_4+f.ldelem_u4+f.ldloc_s+f.ldc_i4_4+f.ldelem_u4+f._unknown+f.stelem_i4)||validateNetByteCode(f.ldloc_s+f._unknown+f.shr_un+f.ldloc_s+f.ldc_i4_s+f.shl+f.or+f.stloc_s+f.ldloc_s+f._unknown+f.shr_un+f.ldloc_s+f.ldc_i4_s+f.shl+f.or+f.stloc_s+f.ldloc_s+f._unknown+f.shr_un+f.ldloc_s+f.ldc_i4_s+f.shl+f.or+f.stloc_s)){log(logType.net,"Anti-tamper detected!")
te=true}if(te)e+=(e.length!=0?" + ":String())+"Anti-tamper"
var re=false
var p=PE.findSignature(PE.getDosStubOffset()+PE.getDosStubSize(),PE.getSize()-PE.getOverlaySize(),"00'<Module>'00")
if(p!==-1){var b=PE.findSignature(p+10,PE.getSize()-PE.getOverlaySize(),"'<Module>'")
if(b!==-1&&PE.readByte(b+8)!==0){log(logType.net,"Fake <Module> detected! Offset: 0x"+Number(b).toString(16))
re=true}}if(re)e+=(e.length!=0?" + ":String())+"Fake .cctor name"
var ie=false
if(p===-1){log("It seems that the .cctor is missing. Bad PE format!")
ie=true}if(ie)e+=(e.length!=0?" + ":String())+"Bad .cctor format"
var m=false
const ne=[f.add,f.sub,f.mul,f.div,f.xor,f.shr,f.shl,f.or,f.not,f.and]
const se=[f.ldc_i4+f.ldc_i4+"%s"+f.stloc,f.ldc_i4+f.ldc_i4+"%s"+f.ldc_i4+f.add,f.ldloc_1+f.ldc_i4+f.ldc_i4+"%s"+f.ldc_i4+f.ldc_i4,f.ldloc+f.ldc_i4+f.ldc_i4+f.ldc_i4+"%s"+f.stelem_i1,f.ldc_i4+f.ldc_i4+"%s"+f.br_s]
for(var _=0;_<se.length&&!m;_++){const F=se[_]
for(var h=0;h<ne.length&&!m;h++){if(h==0&&!validateNetByteCode(F.replace("%s",f._unknown)))break
const ve=F.replace("%s",ne[h])
if(validateNetByteCode(ve)){log(logType.net,"Math mutations detected! Offset: "+lastOffsetDetected)
m=true}}}if(m)e+=(e.length!=0?" + ":String())+"Math mutations"
var ae=false
if(r){if(PE.isNetObjectPresent("Resources")&&!validateGlobalUnicodeString(".Resources")){ae=true}}if(ae)e+=(e.length!=0?" + ":String())+"Strings encryption"
var le=false
if(validateNetByteCode(f.ldc_i4+f.not)&&(validateNetByteCode(f.ldc_i4+f.not+f.neg+f.not+f.neg+f.not+f.neg+f.not+f.neg)||validateNetByteCode(f.ldc_i4+f.not+f.not+f.neg+f.neg+f.not+f.not)||validateNetByteCode(f.ldc_i4+f.not+f.neg+f.not+f.not+f.neg+f.neg)||validateNetByteCode(f.ldc_i4+f.not+f.neg+f.not+f.neg+f.not+f.not)||validateNetByteCode(f.ldc_i4+f.not+f.neg+f.not+f.neg+f.not+f.neg))){log(logType.net,"Math inversions detected, offset "+lastOffsetDetected)
le=true}if(le)e+=(e.length!=0?" + ":String())+"Math inversions"
var oe=false
if(validateNetByteCode(f.setStrict(f.calli,"FF FF FF FF")+f.setStrict(f.sizeof,"FF FF FF FF"))){log(logType,"Invalid OpCodes detected, offset "+lastOffsetDetected)
oe=true}if(oe)e+=(e.length!=0?" + ":String())+"Invalid OpCodes"
var ce=false
var fe=String()
const ge=[{lib:"AgileDotNet.VMRuntime.dll",name:"Agile"},{lib:"Xerin.Runtime.dll",name:"XerinFuscator"},{lib:"OneVM.Runtime.dll",name:"OneVM"},{lib:"HVMRuntm.dll",name:"DNGuard"}]
for(var o=0;o<ge.length;o++){const R=ge[o],X=R.lib,M=R.name
if(PE.isNetObjectPresent(X)||PE.isNetObjectPresent(X.substring(0,X.length-4))){log(logType.net,M+" runtime detected!")
ce=true
fe=M
break}}if(ce)e+=(e.length!=0?" + ":String())+fe+" runtime"
const y=["Xenocode.Client.Attributes.AssemblyAttributes.ProcessedByXenocode","CryptoObfuscator.ProtectedWithCryptoObfuscatorAttribute","SecureTeam.Attributes.ObfuscatedByAgileDotNetAttribute","Xenocode.Client.Attributes.AssemblyAttributes","SmartAssembly.Attributes.PoweredByAttribute","ObfuscatedByAgileDotNetAttribute","NineRays.Obfuscator.Evaluation","ObfuscatedByCliSecureAttribute","BabelObfuscatorAttribute","AsStrongAsFuckAttribute","ProtectedByDotnetsafer","Macrobject.Obfuscator","DotfuscatorAttribute","CodeWallTrialVersion","ConfusedByAttribute","ObfuscatedByGoliath","NETSpider.Attribute","NineRays.Obfuscator","PoweredByAttribute","RustemSoft.Skater","BabelAttribute","MRuntime3.dll","YanoAttribute","EMyPID_8234_","ZYXDNGuarder","SkiDzEX","Sixxpack","____KILL","Reactor"]
var N=false
var C=false
var A=0
var ue=String()
for(var O=0;O<y.length&&!N;O++){if(validateNetObject(y[O])){ue=y[O]
A++}if(A>1){N=true}}if(N){e+=(e.length!=0?" + ":String())+"Fake signatures"}else{if(A===1){log(logType.nothing,"Watermark (Attribute) found: '"+ue+"'")
C=true}if(!C&&(validateSignature("'Obfuscated'")||validateSignature("'obfuscated'")||validateSignature("'ByAttribute'")||validateSignature("'ObfuscatorAttribute'")||validateNetObject("ObfuscationAttribute"))&&!isFrameworkComponent()){C=true}}if(C)e+=(e.length!=0?" + ":String())+"Watermark"
const de=["SafeNet Sentinel LDK .NET","Xenocode Postbuild","Smart Assembly","Dotfuscator","Babel .NET","Spices.Net","Maxtocode","FISH .NET","CliSecure","CodeWall","CodeVeil","Sixxpack","DNGuard","Goliath","Agile","Yano"],T=["ChainskiCrypter","Quest PowerGUI","DataAnubis","NsPack","ASPack"],Se=["Sentinel SuperPro dongle reference","Unikey/Activator dongle reference","Eutron SmartKey dongle reference","SenseLock dongle reference","Hardlock dongle reference","WIBU Key dongle reference","Wizzkey dongle reference","SoftLok dongle reference","NetHASP dongle reference"]
if(N){for(var c=0;c<de.length;c++){_removeResult("protector",de[c])}for(var c=0;c<T.length;c++){_removeResult("cryptor",T[c])
_removeResult("packer",T[c])}for(var c=0;c<Se.length;c++){_removeResult("protection",Se[c])}}if(e.length!=0)t=true
if(t){_setResult("~protection","Obfuscation",String(),PE.isVerbose()?e:String())}}function scanForAntiAnalysis_NET(){var e=String()
var t=false
var r=false
const i="Debugger",n="get_IsAttached",s="IsLogging"
if(((validateNetObject(i)||validateNetUnicodeString(i))&&(validateNetObject(n)||validateNetUnicodeString(n)||(validateNetObject(s)||validateNetUnicodeString(s)))||(validateNetObject("CheckRemoteDebuggerPresent")||validateNetObject("IsDebuggerPresent")||validateNetObject("NtRemoveProcessDebug")||validateNetObject("NtQueryInformationProcess")))&&!isFrameworkComponent()){r=true}if(r)e+=(e.length!=0?" + ":String())+"Anti-debug"
var a=false
if(validateNetObject("VirtualProtect")&&(isAllNetReferencesPresent(references=["System.Runtime.InteropServices","Marshal","GetHINSTANCE","IntPtr","op_Explicit"])||isAllNetReferencesPresent(references=["System.Diagnostics","memcpy","IntPtr","get_MainModule","get_BaseAddress"])||isAllNetReferencesPresent(references=["System.Runtime.InteropServices","Marshal","GetHINSTANCE","IntPtr","CopyBlock","InitBlock"]))){a=true}if(a)e+=(e.length!=0?" + ":String())+"Anti-dump"
const l=["dnspy","dnSpy","DNSPY"]
var o=false
for(var c=0;c<l.length&&!o;c++){const P=l[c]
if(validateGlobalUnicodeString(P)||validateSignature("'"+P+"'")){o=true}}if(o)e+=(e.length!=0?" + ":String())+"Anti-dnSpy"
const f=["ilspy","ilSpy","ILSpy","ILSPY"]
var g=false
for(var c=0;c<f.length&&!g;c++){const E=f[c]
if(validateGlobalUnicodeString(E)||validateSignature("'"+E+"'")){g=true}}if(g)e+=(e.length!=0?" + ":String())+"Anti-ILSpy"
const u=["sbiedll.","SbieDll.","SBIEDLL."]
var d=false
if(validateSignature("'GetModuleHandle'")){for(var c=0;c<u.length&&!d;c++){const v=u[c]
if(validateGlobalUnicodeString(v)||validateSignature("'"+v+"'")){d=true}}}if(d)e+=(e.length!=0?" + ":String())+"Anti-SandBoxie"
var S=false
if(validateNetUnicodeString("vmware")||validateNetUnicodeString("VirtualBox")){S=true}if(S)e+=(e.length!=0?" + ":String())+"Anti-VM"
if(e.length!=0)t=true
if(t){_setResult("~protection","Anti analysis",String(),PE.isVerbose()?e:String())}}function isClrNET(){return PE.isNET()&&PE.isLibraryPresent("KERNEL32.DLL")&&PE.isNetGlobalCctorPresent()}function NetOpCodes(){this.add="58"
this.sub="59"
this.mul="5A"
this.and="5F"
this.bne_un="40????????"
this.bne_un_s="3309"
this.br="38????????"
this.br_s="2B??"
this.brfalse="39????????"
this.brfalse_s="2C??"
this.brtrue="3A????????"
this.call="28????????"
this.calli="29????????"
this.ceq="FE01"
this.div="5B"
this.dup="25"
this.idelem_i="97"
this.ldc_i4="20????????"
this.ldc_i4_0="16"
this.ldc_i4_1="17"
this.ldc_i4_2="18"
this.ldc_i4_3="19"
this.ldc_i4_4="1A"
this.ldc_i4_s="1F??"
this.ldftn="FE06????????"
this.ldloc="FE??????"
this.ldloc_0="06"
this.ldloc_1="07"
this.ldloc_2="08"
this.ldloc_3="09"
this.ldloc_s="11??"
this.ldsfld="7E????????"
this.ldstr="72????????"
this.ldelem_u4="95"
this.nop="00"
this.not="66"
this.neg="65"
this.or="60"
this.pop="26"
this.ret="2A"
this.rem_un="5E"
this.shl="62"
this.shr="63"
this.sizeof="FE1C????????"
this.stloc="FE0E????"
this.stloc_0="0A"
this.stloc_1="0B"
this.stloc_2="0C"
this.stloc_3="0D"
this.stloc_s="13??"
this.shr_un="64"
this.xor="61"
this.stelem_i="9B"
this.stelem_i1="9C"
this.stelem_i4="9E"
this.box="8C????????"
this.switch__nobody="45"
this._unknown="**"
this._any="??"
this.setStrict=function(e,t){e=removeSpaces(e)
t=removeSpaces(t)
var r=e.indexOf("??")
var i=r!==-1
var n=i?e.substr(0,r):e
if(i&&e.substr(n.length).length!=t.length){_error("The size of the input values does not match.")}return n+t}
this.setNullValue=function(e){if(e.indexOf("??")===-1){_error("Instruction does not have a body to overwrite the value.")}return replaceAllInString(e,"??","00")}}function removeSpaces(e){return e.split(" ").join("")}function replaceAllInString(e,t,r){while(e.indexOf(t)!==-1){e=e.replace(t,r)}return e}function clearSectionName(e){if(e.length>0&&e.trim()===String()){return e}return e.trim()}function scanForPackersAndCryptors_NET_and_Native(){var e=String()
var I=Boolean(),t=Boolean()
if(PE.isNET()){var r=false
if(isAllNetReferencesPresent(references=["System.Reflection","get_EntryPoint","Assembly","Invoke","Load"])){r=true
e="Assembly invoke"}if(findAndMark("System.Security.Cryptography",isFullName=false)!=String()){const oe=["TripleDESCryptoServiceProvider","RSACryptoServiceProvider","DSACryptoServiceProvider","DESCryptoServiceProvider","AesCryptoServiceProvider","Rfc2898DeriveBytes","SHA256Managed","TripleDES","Rijndael","ECDsaCng","AesAEAD","Aes192Cbc","Aes256Cbc","Aes128Cbc","AesManaged","AesCng","SHA256","SHA512","SHA1CryptoServiceProvider","SHA512CryptoServiceProvider","RC2CryptoServiceProvider","SHA384CryptoServiceProvider","SHA256CryptoServiceProvider","RNGCryptoServiceProvider"]
for(var i=0;i<oe.length&&!t;i++){var n=oe[i],L=findAndMark(sign=n,isFullName=true)
if(r&&L.length!=0){log(logType.net,"Crypto class present: "+n)
t=true
e+=(e.length!=0?" + ":String())+n}}}if(findAndMark("System.IO.Compression",isFullName=false).length!=0){const ce=["DeflateStream","GZipStream"]
for(var i=0;i<ce.length;i++){var s=ce[i],L=findAndMark(s,isFullName=true)
if(r&&L.length!=0){log(logType.net,"Compression class present: "+s)
if(t)e+=(e.length!=0?" + ":String())+s
break}}}}var a=false
if(!PE.isDll()&&PE.isOverlayPresent()){const X=["'Rar!'","'PK'03","';!@Install@!UTF-8!'","'7z'BCAF271C","efbbbf';!@Install@!UTF-8!'"]
for(var l=0;l<X.length;l++){if(PE.compareOverlay(X[l])){log(logType.nothing,"SFX overlay pattern: "+X[l])
a=true}}if(!a&&!PE.isNET()){const M=["4883ec..e8$$$$$$$$48895c24..55488bec4883ec..488365....48bb................488b05........483bc375","83ec..5657ff15........8bf08d4424..50c74424..........ff15........8a068b3d........3c..75..56ffd7","e9$$$$$$$$558bec81ec........830d..........5356576a..33dbbf........68........895d..881d","558bec83ec..56ff15........8bf08a003c..75..84c074..803e..74..46803e..75..803e..75..46eb","6a..33c0505050ff15........50e8$$$$$$$$55b8........8bece8........53b9........5657be","6a..68........e8........66813d............75..a1........81b8................75..","558bec83ec..565733ffff15........8bf0897d..8d45..50ff15........8a063c..75..56ff15","51526a..2eff15........506a..6a..2eff15........50e8........502eff15........5a59c3","558bec81ec........535657ff15........a3........ff15........a1........6625....3d","558becb8........e8........5356be........578d45..5633db5053ff15........85c00f84","a1........c1e0..a3........575133c0bf........b9........3bcf76..2bcffcf3aa595f","558bec83c4..5356e8$$$$$$$$e8........6a..e8........8905........e8........8905","ff15........b1..380874..b1..4080....74..380874..4080....75..80....74..4033","53ff15........b3..38..74..80c3..4033d28a083aca74..3acb74..408a083aca75","558bec83c4..535657e8........e8........33c05568........64ff30648920e8","53ff15........b3..38..74..80c3..8a48..4033d23aca74..3acb74..8a48..40","e8$$$$$$$$53bb........e8........85c074..33d28a1083fa..75..40eb","fffe2a002a002a006d0065007300730061006700650073002a002a002a00","e8$$$$$$$$558bec83c4..b8........53","8A48014033D23ACA740A3ACB74068A4801"]
if(PE.section["_winzip_"]){a=true}for(var o=0;o<M.length;o++){if(PE.compareEP(M[o])){log(logType.nothing,"SFX entry pattern: "+M[o])
a=true}}}}if(a)e+=(e.length!=0?" + ":String())+"SFX"
var c=false
if(!PE.isDll()){const fe=["53565755488D35........488DBE","B8........68........64","60..................E8","33C08BC068........68","74..E9........60E8","EB0668........C39C","93071F05....8ED0BC","60BE........8DBE","B8........6A..68","BE........AD8BF8","68........9C60E8","53558BE833DBEB60","BD........C745","57565351524150","B8........5064","8CCBBA....03DA","B8........669C","8CC0FA8ED0BC","B8........60","8B44240456","1E068CC88E","1E068CCBBA","EB..9C60E8","9C60E8CA","60FCBED4","60EB..5D","60EB..E8","64FF35","6033C0","669C60","EB..60","60E8","6068"]
for(var f=0;f<fe.length&&!c;f++){const ge=fe[f]
if(PE.compareEP(ge)){log(logType.nothing,"EP like a packer: '"+ge+"'")
c=true}}}if(c)e+=(e.length!=0?" + ":String())+"EntryPoint"
var g=false
if(!PE.isDll()){if(PE.getNumberOfSections()>1){var u=-1,d=-1
for(var i=1;u==-1;i++){u=PE.OffsetToVA(PE.getSectionFileOffset(PE.getNumberOfSections()-i))}d=PE.getAddressOfEntryPoint()
if(d>=u){g=true
log(logType.nothing,"EP address ("+d+") more than last section address ("+u+")")}}}if(g)e="Last section EP"
var x=false
if(!PE.isDll()){if(g&&getAsmOpCode(getAsmInstructionByIndex(1))==="CALL"){log(logType.nothing,"Strange call to address: "+getAsmInstructionByIndex(1).split(" ")[1])
x=true}}if(x)e+=(e.length!=0?" + ":String())+"Strange call"
var U=false
var w=[["UPX","0.59-0.93",0,3573402289],["UPX","0.94-1.93",0,491858330],["UPX","1.94-2.03",0,3006365830],["UPX","1.94-2.03",0,930654905],["UPX","2.90-3.XX",0,4084592131],["UPX","2.90-3.XX",0,4147632211],["UPX","3.91+",0,4147632211],["UPX","3.91+",-1,2191542524],["UPX","3.91+",-1,1430918984],["NSPACK",null,0,4084592131],["ASPack","1.XX-2.XX",0,309523547],["MKFPACK",null,0,1119086585],["MPRESS",null,0,391052164],["PACKMAN","0.0.0.1",0,391052164],["PACKMAN","1.0",0,1762093699],["PECompact","0.90-0.91",-1,3198424785],["PECompact","0.92-0.94",-1,2469473326],["PECompact","0.97-0.971b",-1,3869934741],["PECompact","0.975-1.10b3",-1,689473049],["PECompact","1.10b7-1.34",-1,3837858565],["PECompact","1.30-1.40",0,2603812333],["PECompact","1.40-1.84",0,3428526652],["PECompact","2.40-3.XX",0,642960975],["PECompact","2.40-3.XX",-1,3683629941],["EXE32PACK","1.3X-1.4X",0,391052164],["tElock","1.0",-1,85542647],["JDPACK","2.00",0,3221412622],["CRINKLER",null,0,185475007],["WinUpack",null,-1,689473049],["YodasCrypter","1.X",-1,319005979],["XComp","0.97-0.98",-1,3927860964],["XPack","0.97-0.98",-1,717508050],["kkrunchy",null,-1,689473049],["ANDPakk2","0.18",-1,689473049],["ASProtect","1.XX-2.XX",0,309523547],["SHRINKER","3.2",0,2997241944],["SHRINKER","3.2",0,361427664],["SHRINKER","3.2",0,1239984671],["SHRINKER","3.5",0,3924428881],["SHRINKER","3.5",0,860141917],["SHRINKER","3.5",0,1482721523],["Enigma","1.00-3.60",0,3221412622],["Enigma","2.XX",0,3717389840],["Enigma","3.70+",0,3494672976],["PCGUARD","5.04-5.05",0,1511431290],["PCGUARD","5.04-5.05",0,185280869],["eXPressor","1.2",-1,1723030638],["eXPressor","1.2",-1,854869612],["eXPressor","1.3",-1,2451374720],["eXPressor","1.3",-1,4112431720],["eXPressor","1.3",-1,3162820105],["eXPressor","1.4.5.X",0,1115166379],["eXPressor","1.4.5.X",-1,1013996718],["eXPressor","1.4.5.X",-1,1292034195],["eXPressor","1.4.5.X",-1,2508889762],["eXPressor","1.5.0.X",-1,2059058010],["eXPressor","1.5.0.X",-1,2513049060],["eXPressor","1.5.0.X",-1,3175209504],["eXPressor","1.6",-1,3394828812],["eXPressor","1.6.1",-1,1224725337],["VMProtect","1.70",-1,536023103],["VMProtect","2.0.3-2.13",-1,2635247955],["VMProtect","3.0.0",-1,508887233],["VMProtect","3.0.9",-1,3321588299],["VMProtect","3.2.0-3.5.0",-1,1554684359],["YodasProtector","1.0b",-1,319005979],["ASM Guard","2.XX+",-1,4058043963],["Themida","2.XX-3.XX",0,1073532042],["Amber",null,-1,2546409553],[".NET Reactor",null,0,2529070630],[".NET Reactor",null,1,3033375535],["Bat To Exe Converter",null,0,1923271268],["Vbs To Exe Converter",null,0,405449832],["DNGuard",null,0,943924593],["DNGuard","4.9+",0,2583213454]]
const S=validateImportHashes(w)
var P
if(S!=null){P=S[1]
log(logType.nothing,"Imports hash like "+S[0]+(P?" (version "+P+")":String())+" ("+S[3]+")")
U=true}w=undefined
if(U)e+=(e.length!=0?" + ":String())+"Imports like "+S[0]+(P?" (v"+S[1]+")":String())
var z=false
var V=[["UPX",null,"UPX0"],["UPX",null,"UPX1"],["UPX",null,"UPX2"],["UPX",null,"UPX3"],["VMProtect",null,".vmp"],["VMProtect",null,".vmp0"],["VMProtect",null,".vmp1"],["VMProtect",null,".vmp2"],["VMProtect",null,".vmp3"],["ASPack","1.08-2.XX",".adata"],["ASPack","2.XX",".aspack"],["Petite",null,".petite"],["Petite",null,"petite"],["Enigma",null,".enigma1"],["Enigma",null,".enigma2"],[".NET Reactor","2.XX",".reacto"],["Themida","3.X",".imports"],["Themida","3.X",".themida"],["Themida","3.X",".winlice"],["Themida","3.X",".loadcon"],["Themida","2.XX","   "],["Themida",null,".stub01"],["ASM Guard","2.XX","ASMGUARD"],["ASM Guard","2.XX",".asmg"],["tElock",null,"UPX!"],["YodasProtector","1.0b",".yP"],["YodasCrypter","1.X","yC"],["MPRESS",null,".MPRESS1"],["MPRESS",null,".MPRESS2"],["DxPack","1.0","coderpub"],["SafeNet",null,".AKS1"],["SafeNet",null,".AKS2"],["SafeNet",null,".AKS3"],["Alienyze",null,".alien"],["PECompact",null,"pec"],["PECompact",null,"pec1"],["RLP",null,".rlp"],[".NET Reactor",null,".reacto"],["StarForce","4.X-5.X",".ps4"],["StarForce","3.X",".sforce3"],["Safengine Shielden",null,".sedat"],["VirtualizeProtect",null,"VProtect"],["Krypton",null,"YADO"],["NsPack",null,"nsp0"],["NsPack",null,"nsp1"],["nPack",null,".nPack"],["JDPack",null,".jdpack"],["SC Pack",null,".scpack"],["Simple Pack",null,".spack"],["Eronana",null,".packer"],["PE-SHiELD",null,"PESHiELD"],["SVK Protector",null,"SVKP"],["obfus.h",null,".obfh"],["Warbird",null,"?g_Encry"],["ACProtect",null,".perplex"],["Software Compress",null,"SoftComp"],["RLPack",null,".RLPack"],["CodeVirtualizer",null,".vlizer"],["DYAMAR","1.3.5",".dyamarC"],["hmimys","1.3","hmimys"],["Morphnah","1.0.X",".nah"],["BoxedApp",null,".bxpck"]]
const E=validateSectionNames(V)
var v
if(E!=null){v=E[1]
log(logType.nothing,"Sections like "+E[0]+(v?" (v"+v+")":String()))
z=true}V=undefined
if(z)e+=(e.length!=0?" + ":String())+"Sections like "+E[0]+(v?" (v"+E[1]+")":String())
var $=false
const p=PE.getSectionNameCollision("0","1")
if(p.length!=0){log(logType.nothing,"Section names collision: '"+p+"'")
$=true}if($)e+=(e.length!=0?" + ":String())+'Sections collision ("'+p+'")'
var b=false
var H=PE.getNumberOfSections(),m={}
for(var i=0;i<H&&!b;i++){var _=PE.getSectionName(i)
m[_]=(m[_]||0)+1
if(m[_]>1){log(logType.nothing,"Section names repeating: '"+clearSectionName(_)+"'")
b=true}}if(b)e+=(e.length!=0?" + ":String())+"Section names repeating"
var j=false
const h=getFirstEpAsmOpCode()
switch(h){case"PUSHAL":case"PUSHA":case"PUSHF":case"POPA":log(logType.nothing,"'"+h+"' at EP")
j=true}if(j)e+=(e.length!=0?" + ":String())+'"'+h.toLowerCase()+'" at EP'
const G=["TVoAAAAAA","TVqQAA","TVpQAA","TVp4AA"]
var y=false
for(var N=0;N<G.length&&!y;N++){const ue=G[N]
if(validateGlobalUnicodeString(ue)||validateSignature("'"+ue+"'")){log(logType.nothing,"Encoded PE detected! (with Base64)")
t=true
y=true}}if(y)e+=(e.length!=0?" + ":String())+"Base64 payload"
var C=false
if(PE.isOverlayPresent()&&PE.getOverlaySize()>=100&&PE.compareOverlay("'MZ'")){log(logType.any,"PE signature at overlay")
C=true}if(C)e+=(e.length!=0?" + ":String())+"PE in overlay"
var K=false
if(!C&&!a&&!PE.isSigned()&&PE.isOverlayPresent()){var W=PE.calculateEntropy(PE.getOverlayOffset(),PE.getOverlaySize())
if(PE.getOverlaySize()>150&&W>7||PE.getOverlaySize()>PE.getSize()-PE.getOverlaySize()){log(logType.any,"Overlay size: "+PE.getOverlaySize()+" bytes; Entropy: "+W)
K=true}}if(K)e+=(e.length!=0?" + ":String())+"Strange overlay"
var Y=false
if(!(PE.isDll()&&(PE.section[".rdata"]||PE.section[".rsrc"]))&&PE.calculateEntropy(0,PE.getSize()-PE.getOverlaySize())>7.3){Y=true}if(Y)e+=(e.length!=0?" + ":String())+"High entropy"
var A=false
var O=0
for(var T=0;T<PE.getNumberOfSections()&&!A;T++){O=T
if(PE.calculateEntropy(PE.getSectionFileOffset(O),PE.getSectionFileSize(O))>7.4){A=true}}if(A)e+=(e.length!=0?" + ":String())+"Section "+O+' ("'+clearSectionName(PE.getSectionName(O))+'") compressed'
var B=false
var q=PE.getNumberOfImports(),D={}
for(var i=0;i<q&&!B;i++){var k=PE.getImportLibraryName(i)
D[k]=(D[k]||0)+1
if(D[k]>=3){B=true}}if(B)e+=(e.length!=0?" + ":String())+"Recurring import names"
var F=false
var R=0
const Z=536870912,J=1073741824,Q=2147483648,ee=32
const te=Z|J|Q,re=te|ee
for(var i=0;i<PE.getNumberOfSections()&&!F;i++){var ie=PE.section[i].Characteristics
if((ie&te)===te||(ie&re)===re){F=true
R=i}}if(F)e+=(e.length!==0?" + ":String())+"Section "+R+' ("'+clearSectionName(PE.getSectionName(R))+'") has RWX'
var ne=false
const se=PE.read_int32(60)+4+20,ae=se+(PE.is64()?112:96)+12*8
if(PE.read_int32(ae)===0){ne=true}if(ne)e+=(e.length!=0?" + ":String())+"IAT directory empty"
if(e.length!=0)I=true
if(I){var le=t?"cryptor":"packer"
_setResult("~"+le,(t?"Encrypted":"Compressed")+" data",String(),PE.isVerbose()?e:String())}}function scanForLicensingSystems_NET_and_Native(){var e=String()
var t=Boolean()
if(PE.isNET()){var r=false
if(PE.isNetObjectPresent("LicenseProviderAttribute")){r=true}if(r)e="Provider attribute"
var i=false
if(PE.isNetObjectPresent("LicenseManager")){i=true}if(i)e+=(e.length!=0?" + ":String())+"License manager"}var n=false
const s=["nter serial ","erial key "," activate "," trial ","rong activation","rong licens","icense expire","valid license","icense key"," full version"," purchase a "]
for(var a=0;a<s.length;a++){const l=s[a]
if(PE.isSignaturePresent(0,PE.getSize(),"'"+l+"'")||PE.isSignaturePresent(0,PE.getSize(),"'"+generateUnicodeSignatureMask(l)+"'")){n=true
break}}if(n)e+=(e.length!=0?" + ":String())+"Strings"
if(e.length!=0)t=true
if(t){_setResult("~licensing","Contains",String(),PE.isVerbose()?e:String())}}function scanForBadFileFormat_NET_and_Native(){var e=String()
var t=Boolean()
var r=false
if(!PE.isEntryPointCorrect()){r=true}if(r)e+=(e.length!=0?" + ":String())+"EntryPoint"
var i=false
if(!PE.isSectionAlignmentCorrect()){i=true}if(i)e+=(e.length!=0?" + ":String())+"Section aligment"
var n=false
if(!PE.isFileAlignmentCorrect()){n=true}if(n)e+=(e.length!=0?" + ":String())+"File alignment"
var s=false
if(!PE.isHeaderCorrect()){s=true}if(s)e+=(e.length!=0?" + ":String())+"Header"
var a=false
if(!PE.isRelocsTableCorrect()){a=true}if(a)e+=(e.length!=0?" + ":String())+"Relocs"
var l=false
if(!PE.isImportTableCorrect()){l=true}if(l)e+=(e.length!=0?" + ":String())+"IAT"
var o=false
if(PE.isDll()&&!PE.isExportTableCorrect()){o=true}if(o)e+=(e.length!=0?" + ":String())+"EAT"
var c=false
if(!PE.isResourcesTableCorrect()){c=true}if(c)e+=(e.length!=0?" + ":String())+"Resources"
if(e.length!=0)t=true
if(t){_setResult("~corrupted data","Bad format",String(),PE.isVerbose()?e:String())}}function scanForDebugData_NET_and_Native(){var e=String()
var t=Boolean()
var r=false
var i=0
for(var n=0;n<PE.getNumberOfSections()&&!r;n++){i=n
const d=PE.getSectionName(n).toLowerCase()
if(d.indexOf("debug")!==-1||d===".stab"||d===".stabstr"){log(logType.any,'Debug section detected: "'+clearSectionName(PE.getSectionName(i))+'"')
r=true}}if(r)e="Section "+i+' ("'+clearSectionName(PE.getSectionName(i))+'")'
var s=false
if(!PE.isNET()&&PE.isExportFunctionPresent("DotNetRuntimeDebugHeader")){log(logType.any,".NET Native debug function detected")
s=true}if(s)e+=(e.length!=0?" + ":String())+"DotNET runtime header"
var a=false
var l=PE.findSignature(PE.getDosStubOffset()+PE.getDosStubSize(),PE.getSize()-PE.getOverlaySize(),"'.pdb'")
var o,c=String()
if(l!==-1){for(var n=l;n>0;n--){if(PE.readByte(n)===0){o=n+1
break}}c=PE.getString(o,256)
if(c.length>255)c=c.substring(0,255)+" . . ."
c=c.replace(/[\n\r]/g,"")
if(c.match(/^[a-zA-Z]:\\/)!==null){log(logType.any,'PDB absolute path: "'+c+'"')
a=true}}if(a)e+=(e.length!=0?" + ":String())+"Absolute PDB path"
var f=false
var g=String()
if(c&&c[0]!=="."&&!a){g=validateSignature("00 52 53 44 53")?"Embedded":"Portable"
log(logType.any,g+' PDB name: "'+c+'"')
f=true}if(f)e+=(e.length!=0?" + ":String())+g+" PDB (release)"
var u=false
if(PE.isNET()&&PE.isNetObjectPresent("costura.costura.pdb.compressed")){log(logType.any,"Costura embedded PDB detected")
u=true}if(u)e+=(e.length!=0?" + ":String())+"Costura.Fody embedded PDB"
if(e.length!=0)t=true
if(t){_setResult("~debug data","Contains",String(),PE.isVerbose()?e:String())}}function isVbNetStandartLibraryPresent(){return PE.isNetObjectPresent("Microsoft.VisualBasic")}function isFrameworkComponent(){return PE.isNET()&&PE.isDll()&&PE.isSigned()&&PE.findSignature(PE.getOverlayOffset(),300,"'Microsoft Corporation'")!=-1}function validateSignature(e){const t=PE.findSignature(PE.getDosStubOffset()+PE.getDosStubSize(),PE.getSize()-PE.getOverlaySize(),e),r=t!=-1
if(r){lastOffsetDetected="0x"+Number(t).toString(16)
log(logType.any,"Pattern found: "+e)}return r}function validateNetByteCode(e){for(var t=0;t<PE.getNumberOfSections();t++){const i=PE.getSectionFileOffset(t),n=PE.getSectionFileSize(t)
var r=PE.findSignature(i,i+n,e)
if(r!=-1){lastOffsetDetected="0x"+Number(r).toString(16)
log(logType.net,"ByteCode detected: "+e)
return true}}return false}function validateNetObject(e){const t=PE.isNetObjectPresent(e)
if(t)log(logType.net,"Object present: "+e)
return t}function validateNetUnicodeString(e){const t=PE.isNetUStringPresent(e)
if(t)log(logType.net,'String present: "'+e+'"')
return t}function validateGlobalUnicodeString(e){const t=PE.findSignature(PE.getDosStubOffset()+PE.getDosStubSize(),PE.getSize()-PE.getOverlaySize(),generateUnicodeSignatureMask(e))!=-1
if(t)log(logType.nothing,'Unicode string found: "'+e+'"')
return t}function generateUnicodeSignatureMask(e){var t=String()
for(var r=0;r<e.length;r++){t+=(r!=0?"00":String())+"'"+e[r]+"'"}return t}function isAllNetReferencesMissing(e){for(var t=0;t<e.length;t++){const r=e[t]
if(PE.isNetObjectPresent(r)){return false}}return true}function isAllNetReferencesPresent(e){for(var t=0;t<e.length;t++){const r=e[t]
if(!PE.isNetObjectPresent(r)){return false}}return true}function findAndMark(e,t){if(PE.isSignatureInSectionPresent(0,"00'"+e+"'"+(t?"00":String()))){return e}return String()}function scanForObfuscations_Native(){var e=String()
var t=Boolean()
var r=false
const i="-=+~!@#$%^&*()\"â„–;%:?*():;,/\\|'`<> "
for(var n=0;n<PE.getNumberOfSections()&&!r;n++){var s=PE.getSectionName(n)
if(s.length===0||s[0]===" "){r=true}var a=false
if(_isResultPresent("linker","GNU linker ld (GNU Binutils)")){if(PE.section[".build-id"]){a=true}else{for(var l=1;l<10&&!a;l++){if(s.indexOf("/"+l)!=-1){a=true}}}}if(a){r=false
break}for(var l=0;l<i.length&&!r;l++){if(s.indexOf(i[l])!==-1){r=true}}}if(r)e+=(e.length!=0?" + ":String())+"Strange sections"
var o=false,c=false
if(PE.getDosStubSize()===0){o=true}else{const h=["This program cannot be run in DOS mode.","This program must be run under Win32","This program must be run under Win64","This program requires Win32","This is a Windows NT character-mode executable"]
c=true
for(var l=0;l<h.length&&c;l++){if(PE.findSignature(PE.getDosStubOffset(),PE.getDosStubSize(),"'"+h[l]+"'")!=-1){c=false}}}if(o)e+=(e.length!=0?" + ":String())+"Missing DOS"
else if(c)e+=(e.length!=0?" + ":String())+"Custom DOS"
var f=false
for(var n=0;n<PE.getNumberOfImports()&&!f;n++){const y=PE.getImportLibraryName(n).toLowerCase()
if(y.length>4){if(y[y.length-4]!=="."){f=true}}else{f=true}}if(f)e+=(e.length!=0?" + ":String())+"No extension import"
var g=false
for(var n=0;n<PE.getNumberOfImports()&&!g;n++){const y=PE.getImportLibraryName(n).toLowerCase()
if(y.length>4){if(y!=="ntoskrnl.exe"&&y.substr(y.length-4,4)===".exe"){g=true}}}if(g)e+=(e.length!=0?" + ":String())+"EXE in imports"
var u=false
const d="=~!@#$%^&*()\"â„–;%:?*():;,|'`<> "
for(var n=0;n<PE.getNumberOfImports()&&!u;n++){const y=PE.getImportLibraryName(n).toLowerCase()
for(var S=0;S<d.length&&!u;S++){if(y.indexOf(d[S])!==-1){u=true}}}if(u)e+=(e.length!=0?" + ":String())+"Invalid imports"
var P=false
for(var n=0;n<PE.getNumberOfResources()&&!P;n++){if(PE.getResourceOffsetByNumber(n)===-1)P=true}if(P)e+=(e.length!=0?" + ":String())+"Unreadable resources"
var E=false
if(PE.isDll()&&(PE.isExportFunctionPresent("Start")||PE.isExportFunctionPresent("main")||PE.isExportFunctionPresent("_start"))){E=true}if(E)e+=(e.length!=0?" + ":String())+"EXE as DLL"
var v=false
if(PE.section[0].Name!=".text"&&PE.section[0].Name!=".textbss"&&(PE.section[".text"]&&PE.section[".textbss"])){v=true}if(v)e+=(e.length!=0?" + ":String())+'".text" section is not first'
var p=false
if(PE.getNumberOfImports()==0&&(!PE.isDll()&&PE.section[".text"])){p=true}if(p)e+=(e.length!=0?" + ":String())+"No IAT"
var b=false
if(getFirstEpAsmInstruction()==="NOP"){b=true}if(b)e+=(e.length!=0?" + ":String())+"Nop at EP"
var m=false
if(!b&&getEpAsmPattern(onlyOpCodes=true,numberOf=5).indexOf(getInstructionsAsmPattern(["NOP","NOP"]))!==-1){m=true}if(m)e+=(e.length!=0?" + ":String())+"Nop EP padding"
if(PE.section[".asmg"]||PE.section["ASMGUARD"]){for(var _=0;_<3;_++)_removeResult("packer",["UPX","MPRESS","EP:MPRESS"][_])}if(e.length!=0)t=true
if(t){_setResult("~protection","Generic",String(),PE.isVerbose()?e:String())}}const _patternSplitter="|"
function getEpAsmPattern(e,t){var r=_patternSplitter
var i=PE.getAddressOfEntryPoint()
for(var n=0;n<t;n++){if(n>=1){i=PE.getDisasmNextAddress(i)}const s=PE.getDisasmString(i)
r+=(e?getAsmOpCode(s):s)+_patternSplitter}return r}function getAsmInstructionByIndex(e){var t=PE.getAddressOfEntryPoint()
for(var r=0;r<=e;r++){if(r>=1){t=PE.getDisasmNextAddress(t)}if(r===e){const i=PE.getDisasmString(t)
return i}}}function getInstructionsAsmPattern(e){return _patternSplitter+(Array.isArray(e)?e.join(_patternSplitter):e)+_patternSplitter}function getFirstEpAsmInstruction(){return PE.getDisasmString(PE.OffsetToVA(PE.getEntryPointOffset()))}function getAsmOpCode(e){return e.indexOf(" ")!==-1?e.split(" ")[0]:e}function getFirstEpAsmOpCode(){return getAsmOpCode(getFirstEpAsmInstruction())}function isFunctionMangled(e){return e.length>5&&(e[0]=="?"&&e.indexOf("@@")!==-1||e.substring(0,4)=="_ZSt")}function getNameOfMangledFunction(e){if(isFunctionMangled(e)){if(e[0]==="?"&&e[1]!=="?"){return e.split("?")[1].split("@")[0]}else if(e[0]==="?"&&e[1]==="?"&&e[3]==="?"&&e[4]==="$"){return e.split("$")[1].split("@")[0]}else if(e[0]==="?"&&e[1]==="?"&&e[2]==="_"){var t=e.split("?")[2].split("@")[0]
t=t.substring(2,t.length)
return t}else if(e[0]==="?"&&e[1]==="?"){var t=e.split("?")[2].split("@")[0]
t=t.substring(1,t.length)
return t}else if(e[0]==="_"){var r=e.match(/_ZSt(\d+)(\w+)/)
if(r){return r[2].substring(0,parseInt(r[1],10))}else{return e}}}else{return e}}function validateImportHashes(e){for(var t=0;t<e.length;t++){const r=t,i=e[r]
const n=i[0],s=i[1],a=i[2],l=i[3]
if(PE.isImportPositionHashPresent(a,l)){return i}}return null}function validateSectionNames(e){for(var t=0;t<e.length;t++){const r=t,i=e[r]
const n=i[0],s=i[1],a=i[2]
if(PE.section[a]){return i}}return null}function scanForLanguages_NET_and_Native(){log(logType.nothing,"Scanning to programming language has started!")
var e=_isLangPresent("C/C++")
const t=[["C++","cpp"],["Rust","rs"],["Java","class"],["JavaScript","js"],["Python","pyd"],["PureBasic","pb"],["Kotlin","kt"]]
for(var r=0;r<t.length;r++){const c=t[r][0],f=t[r][1]
if(PE.isSignaturePresent(0,PE.getSize(),"%% %% %% %% %% %% %% %% '."+f+"' 00")){log(logType.any,"Lines of ."+f+" files ("+c+") detected")
_setLangByHeur(c)}}if(!_isLangDetected("C++")&&PE.isSignaturePresent(0,PE.getSize(),"%% %% %% %% %% %% %% %% %% %% '.c' 00")){log(logType.any,"Lines of .c files (C) detected (not a C++)")
_setLangByHeur("C")}for(var r=0;r<PE.getNumberOfResources();r++){var i=PE.getResourceOffsetByNumber(r)
if(i!==-1){var n=PE.getString(i,64)
if(n.split(" ")[0]==="object"&&n.indexOf(": ")!==-1){_setLangByHeur("Object Pascal")
break}}}var s=false,a=false
for(var r=0;r<PE.getNumberOfImports();r++){const g=PE.getImportLibraryName(r).toLowerCase()
for(var l=0;l<PE.getNumberOfImportThunks(r);l++){const u=PE.getImportFunctionName(r,l)
if(!s&&isFunctionMangled(u)){log(logType.any,'Mangler detected -> "'+g+'", at function "'+getNameOfMangledFunction(u)+'"')
if(!_getNumberOfResults("compiler")&&!_getNumberOfResults("~compiler")){if(u[0]=="_"){_setResult("~compiler","MinGW",String(),String())}else if(u[0]=="?"){_setResult("~compiler","Microsoft Visual C/C++",String(),String())}}s=true}}if(g.indexOf("++")!==-1||g.indexOf("cpp")!==-1||g.indexOf("msvcp")!==-1){log(logType.any,'C++ library present -> "'+g+'"')
s=true
break}if(g.indexOf("msvcr")!==-1){log(logType.any,'C library present -> "'+g+'"')
a=true
break}}const o=PE.section[".rdata"]
if(o){if(e&&PE.isSignaturePresent(o.FileOffset,o.FileSize,generateUnicodeSignatureMask("Visual C++"))){log(logType.any,"Embedded Visual C++ Runtime detected.")
s=true}}if(s||e&&PE.isSignaturePresent(0,PE.getSize()-PE.getOverlaySize(),"' C++ '")){_setLangByHeur("C++")}else if(!_isLangPresent("C++")&&a&&(PE.isFunctionPresent("_iob")||PE.isFunctionPresent("printf")||PE.isFunctionPresent("malloc")||PE.isFunctionPresent("memset"))){_setLangByHeur("C")}else if(PE.isLibraryPresentExp(/^api-ms-win-crt*/i)||PE.section[".msvcjmc"]){_setLangByHeur("C/C++")}else if(!_isLangDetected()&&!_getNumberOfResults("compiler")&&!PE.isNET()){if(!_getNumberOfResults("protector")&&!_getNumberOfResults("cryptor")&&!_getNumberOfResults("~cryptor")&&!_getNumberOfResults("packer")&&!_getNumberOfResults("~packer")){_setLangByHeur("ASMx"+(PE.is64()?"64":"86"))}}}function _setLangByHeur(e){log(logType.any,e+" language detected!")
_setLang(e,true,heurLabel)}function log(e,t){if(!t){return}else if(t.indexOf("\n")!=-1){_error("Illegal char at log( ... )")}var r=String()
if(e!==-2){r=heurLabel}if(e>-2&&e!==0){r+="/"}switch(e){case-2:r="!"
break
case-1:r+="About"
break
case 1:r+="Any"
break
case 2:r+=".NET"
break}if(typeof _log!=="undefined"){_log("["+r+"] "+t)}else{_error("Unable to write log message")}}function scanForMaciliousCode_NET_and_Native(){var e=false
if(validateSignature("'RtlSetProcessIsCritical'")){e=true}if(e)heurAvSetResult("CriticalProc_ntdll",8)
var t=false
if(PE.isNET()){if(validateNetObject("BitBlt")||validateNetObject("GetDC")){t=true}}else{if(validateSignature("00'BitBlt'00")||validateSignature("00'GetDC'00")){t=true}}if(t)heurAvSetResult("TakeScreenshot",3)}function heurAvSetResult(e,t){if(t<=10&&t>=0){_setResult("~macilious","Win"+(PE.is64()?"64":"32")+"."+e,"Heuristic AV",t+"/10")}else{_error("Incorrect scores value for '"+e+"'")}}