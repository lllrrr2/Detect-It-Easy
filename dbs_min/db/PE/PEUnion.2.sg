init("cryptor","PEUnion")
function detect(){if(!PE.isNET()){bDetected=true
if(PE.isPEPlus()){bDetected=false}const e="kernel32.dll"
if(validateNativeImports(isPositive=true,references=[[e,"GetProcAddress"],[e,"ExitProcess"],[e,"GetModuleFileNameA"],[e,"GetComputerNameA"],[e,"VirtualAllocExNuma"],["shlwapi.dll","PathFindFileNameA"]])){bDetected=false}const t="E8??????006A00FF15A4????00C3"
if(PE.getNumberOfSections()!=3||!PE.compareEP(t)||!PE.isSectionNamePresent(".rsrc")||!PE.isSectionNamePresent(".idata")||!PE.isSectionNamePresent(".text")||PE.findString(PE.section[".rsrc"].FileOffset,PE.section[".rsrc"].FileSize,"</assembly>")==-1||!(PE.getSectionVirtualSize(1)+PE.getSectionVirtualSize(2)<PE.getSectionVirtualSize(0))||!PE.isSignatureInSectionPresent(1,"00'Shlwapi.dll'00")){bDetected=false}sOptions+="RunPE"}if(PE.isNET()){bDetected=true
if(validateReferences(isPositive=true,references=["kernel32.dll","LoadLibraryA","GetProcAddress","System.Runtime.InteropServices","System.Runtime.CompilerServices","System.IO","System.Reflection","System.Resources","System.Collections.Generic","System.Core","System.Linq","IEnumerable`1","<>c__DisplayClass1","Func`2"],section=0)){bDetected=false}if(PE.isNetObjectPresent("BeginInvoke")||PE.isNetObjectPresent("EndInvoke")){sOptions+="Invoke"}}sVersion="v4.0"}function validateReferences(e,t,i){for(var r=0;r<t.length;r++){var s="00'"+t[r]+"'00"
if(e==true){if(!PE.isSignatureInSectionPresent(i,s)){return true}}else{if(PE.isSignatureInSectionPresent(i,s)){return true}}}return false
return result()}function validateNativeImports(e,t){for(var i=0;i<t.length;i++){var r=t[i],s=r[0],n=r[1]
if(e==true){if(!PE.isLibraryFunctionPresent(s,n)){return true}}else{if(PE.isLibraryFunctionPresent(s,n)){return true}}}return false}